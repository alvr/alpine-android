name: Docker Images Builder

on:
  push:
    branches:
      - "!*"
    tags:
      - v*

env:
  DH_IMAGE_BASE_NAME: alvrme/alpine-android-base
  DH_IMAGE_NAME: alvrme/alpine-android

  GHCR_IMAGE_BASE_NAME: alvr/alpine-android-base
  GHCR_IMAGE_NAME: alvr/alpine-android

  QUAY_IMAGE_BASE_NAME: alvr/alpine-android-base
  QUAY_IMAGE_NAME: alvr/alpine-android

  DOCKERHUB_USER: alvrme
  QUAY_USER: alvr

  DEFAULT_JDK_VERSION: 11
  LATEST_STABLE_API: 32

jobs:
  build_base_images:
    name: Build Alpine Android Base Image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        jdk: [8, 11, 17]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Tags
        shell: sh
        run: |
          set -eu

          TAGS="jdk${{ matrix.jdk }}"
          TAGS="$TAGS,latest-jdk${{ matrix.jdk }}"
          if [ "${{ matrix.jdk }}" = "${{ env.DEFAULT_JDK_VERSION }}" ]; then
            TAGS="$TAGS,latest"
          fi
          echo "TAGS=$TAGS" >> $GITHUB_ENV

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: |
            ${{ env.DH_IMAGE_BASE_NAME }}
            ghcr.io/${{ env.GHCR_IMAGE_BASE_NAME }}
            quay.io/${{ env.QUAY_IMAGE_BASE_NAME }}
          tag-custom: ${{ env.TAGS }}
          tag-custom-only: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PASS }}

      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ env.QUAY_USER }}
          password: ${{ secrets.QUAY_PASS }}

      - name: Build Android Base JDK${{ matrix.jdk }}
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          file: ./docker/base.Dockerfile
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            JDK_VERSION=${{ matrix.jdk }}

  build_images:
    name: Build Alpine Android Image
    needs: [build_base_images]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        android-api: [28, 29, 30, 31, 32, 33]
        jdk: [8, 11, 17]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get tag version
        id: tag_version
        uses: battila7/get-version-action@v2

      - name: Set environment variables
        shell: sh
        run: |
          set -eu

          TAGS="android-${{ matrix.android-api }}-jdk${{ matrix.jdk }}"
          TAGS="$TAGS,android-${{ matrix.android-api }}-jdk${{ matrix.jdk }}-${{ steps.tag_version.outputs.version }}"
          if [ "${{ matrix.jdk }}" = "${{ env.DEFAULT_JDK_VERSION }}" ]; then
            TAGS="$TAGS,android-${{ matrix.android-api }}"
          fi
          if [ "${{ matrix.android-api }}" = "${{ env.LATEST_STABLE_API }}" ]; then
            TAGS="$TAGS,latest-jdk${{ matrix.jdk }}"
            if [ "${{ matrix.jdk }}" = "${{ env.DEFAULT_JDK_VERSION }}" ]; then
              TAGS="$TAGS,latest"
            fi
          fi
          echo "TAGS=$TAGS" >> $GITHUB_ENV

          case ${{ matrix.android-api }} in
              28) BUILD_TOOLS_VERSION="28.0.3" ;;
              29) BUILD_TOOLS_VERSION="29.0.3" ;;
              30) BUILD_TOOLS_VERSION="30.0.3" ;;
              31) BUILD_TOOLS_VERSION="31.0.0" ;;
              32) BUILD_TOOLS_VERSION="32.0.0" ;;
              33) BUILD_TOOLS_VERSION="33.0.1" ;;
          esac
          echo "BUILD_TOOLS_VERSION=$BUILD_TOOLS_VERSION" >> $GITHUB_ENV

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: |
            ${{ env.DH_IMAGE_NAME }}
            ghcr.io/${{ env.GHCR_IMAGE_NAME }}
            quay.io/${{ env.QUAY_IMAGE_NAME }}
          tag-custom: ${{ env.TAGS }}
          tag-custom-only: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PASS }}

      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ env.QUAY_USER }}
          password: ${{ secrets.QUAY_PASS }}

      - name: Build Android API ${{ matrix.android-api }} JDK${{ matrix.jdk }}
        uses: docker/build-push-action@v2
        with:
          context: ./docker
          file: ./docker/android.Dockerfile
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            JDK_VERSION=${{ matrix.jdk }}
            BUILD_TOOLS=${{ env.BUILD_TOOLS_VERSION }}
            TARGET_SDK=${{ matrix.android-api }}
